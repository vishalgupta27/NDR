# Generated by Django 4.1.2 on 2022-12-20 10:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.CharField(max_length=100, null=True)),
                ('payment_status', models.CharField(choices=[('Paid', 'Paid'), ('Failed', 'Failed'), ('Pending', 'Pending')], default='Pending', max_length=50, null=True)),
                ('date_of_payment', models.DateField(auto_now_add=True)),
                ('pickup_status', models.BooleanField(default=False)),
                ('return_status', models.BooleanField(default=False)),
                ('sales_month', models.CharField(default='December', max_length=100)),
                ('sales_year', models.CharField(default='2022', max_length=100)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('lender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('category_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('Products_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('QrCode_Product', models.FileField(blank=True, null=True, upload_to='user/Products_Qr')),
                ('Attach_supporting_document', models.FileField(blank=True, null=True, upload_to='user/Product_docs')),
                ('ProductStatusCode', models.CharField(max_length=100, null=True)),
                ('ProductName', models.CharField(max_length=100)),
                ('ProductDescription', models.TextField()),
                ('ProductYearOfBirth', models.CharField(max_length=100, null=True)),
                ('Product_lat', models.DecimalField(blank=True, decimal_places=10, max_digits=16, null=True)),
                ('Product_long', models.DecimalField(blank=True, decimal_places=10, max_digits=16, null=True)),
                ('distance', models.DecimalField(blank=True, decimal_places=10, max_digits=16, null=True)),
                ('Product_Image_2', models.ImageField(blank=True, null=True, upload_to='user/Products_IMG')),
                ('make', models.CharField(blank=True, max_length=100, null=True)),
                ('model_number', models.CharField(blank=True, max_length=50, null=True)),
                ('product_address', models.CharField(blank=True, max_length=200, null=True)),
                ('hour_basis', models.CharField(blank=True, max_length=20, null=True)),
                ('delivery_fee', models.FloatField(blank=True, null=True)),
                ('delivery_status', models.BooleanField(default=False)),
                ('OneDay_BasePrice', models.FloatField(blank=True, null=True)),
                ('oneDay_status', models.BooleanField(default=False)),
                ('OneWeek_BasePrice', models.FloatField(blank=True, null=True)),
                ('oneWeek_status', models.BooleanField(default=False)),
                ('OneMonth_BasePrice', models.FloatField(blank=True, null=True)),
                ('oneMonth_status', models.BooleanField(default=False)),
                ('DepositRequired', models.BooleanField(default=False)),
                ('DepositAmount', models.FloatField(blank=True, default=0.0, null=True)),
                ('ServiceMaintRequired', models.BooleanField(default=False)),
                ('ServiceMaintAmount', models.FloatField(blank=True, default=0.0, null=True)),
                ('extra_fees_status', models.BooleanField(default=False)),
                ('extra_fees', models.FloatField(blank=True, default=0.0, null=True)),
                ('grace_period', models.CharField(blank=True, max_length=100, null=True)),
                ('maintenance_break', models.CharField(blank=True, max_length=100, null=True)),
                ('is_wishlist', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('Category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='products.productcategory')),
                ('QrCode_Account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='my_products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tbl_ProductRegistration',
            },
        ),
        migrations.CreateModel(
            name='ProductStatusCode',
            fields=[
                ('ProductStatusCode_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ProductStatusCode', models.CharField(max_length=100)),
                ('Status_Public', models.CharField(max_length=100)),
                ('Description', models.TextField()),
            ],
            options={
                'db_table': 'tbl_ProductStatusCode',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.products')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UnavailabilityDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unavailabilityDate', models.CharField(max_length=100, null=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.products')),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('reward_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('points', models.FloatField(default=0.0, null=True)),
                ('referral', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('dateTime', models.DateTimeField(auto_now_add=True, null=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='products.products')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RequestInbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, null=True)),
                ('from_date', models.CharField(blank=True, max_length=100, null=True)),
                ('to_date', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.CharField(blank=True, max_length=100, null=True)),
                ('request_status', models.CharField(blank=True, choices=[('Requested', 'Requested'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected')], max_length=200, null=True)),
                ('payment_status', models.CharField(choices=[('Paid', 'Paid'), ('Failed', 'Failed'), ('Pending', 'Pending')], default='Pending', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('lender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lender', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='products.products')),
                ('renter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ReportIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.CharField(max_length=100, null=True)),
                ('transaction_id', models.CharField(max_length=100, null=True)),
                ('description', models.TextField(null=True)),
                ('photo', models.FileField(null=True, upload_to='user/report_incident/img')),
                ('document', models.FileField(null=True, upload_to='user/report_incident')),
                ('device_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('reply', models.CharField(blank=True, max_length=500, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.BooleanField(default=False)),
                ('close_date', models.DateTimeField(auto_now=True)),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('reported_on', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='reported_on', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductReviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(null=True)),
                ('about_product', models.TextField(null=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.products')),
                ('renter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductPickUpReturn',
            fields=[
                ('pickUp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('product_img', models.ImageField(upload_to='user/ProductReturnImage')),
                ('total_amount', models.FloatField(null=True)),
                ('status_of_payment', models.CharField(blank=True, choices=[('Recieved', 'Recieved'), ('Not Recieved', 'Not Recieved')], max_length=100, null=True)),
                ('pickup_status', models.CharField(blank=True, max_length=100, null=True)),
                ('return_status', models.CharField(blank=True, max_length=100, null=True)),
                ('pickUp_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('lender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.orderdetails')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='products.products')),
                ('renter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='renter_name', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pickUp_date',),
            },
        ),
        migrations.CreateModel(
            name='Product_Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Product_Image', models.FileField(blank=True, null=True, upload_to='user/Product_images')),
                ('QrCode_Product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qrcode_product', to='products.products')),
                ('product_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_id', to='products.products')),
            ],
            options={
                'db_table': 'tbl_ProductPhotos',
            },
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='products.products'),
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='renter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='renter_id', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='request_inbox',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='products.requestinbox'),
        ),
        migrations.CreateModel(
            name='LenderReviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(null=True)),
                ('about_lender', models.TextField(null=True)),
                ('lender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('renter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='renter', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.CharField(blank=True, max_length=1000, null=True)),
                ('referrer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('referrered', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='referred_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('referrer', 'referrered')},
            },
        ),
    ]
